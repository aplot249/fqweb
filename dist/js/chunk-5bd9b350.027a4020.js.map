{"version":3,"sources":["webpack:///./src/views/Invitation.vue","webpack:///./src/views/Invitation.vue?e748","webpack:///./src/views/Invitation.vue?4cb2","webpack:///./node_modules/js-base64/base64.mjs"],"names":["class","style","initiator","invitee","length","item","index","name","components","setup","JSON","parse","localStorage","getItem","user","getData","then","res","console","log","data","value","render","__scopeId","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","Buffer","_TD","TextDecoder","undefined","_TE","TextEncoder","b64ch","b64chs","b64tab","a","tab","forEach","c","i","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","fn","x","Array","prototype","slice","call","map","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","charCodeAt","TypeError","substring","_btoa","toString","_fromUint8Array","u8a","maxargs","strs","l","push","apply","subarray","join","cb_utob","cc","re_utob","utob","u","_encode","encode","urlsafe","re_btou","cb_btou","cccc","cp","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","_decode","decode","_unURI"],"mappings":"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","file":"js/chunk-5bd9b350.027a4020.js","sourcesContent":["<template>\r\n    <div class=\"invitation\">\r\n        <h2>邀请得奖励</h2>\r\n        <ul>\r\n            <li>把你的邀请链接复制发送给别人，别人通过你的邀请链接打开本网站，注册并使用。你将获得翻墙账号的天数奖励。</li>\r\n            <li>在你翻墙账号的有效期内，每邀请1个人，奖励天数15天。</li>\r\n        </ul>\r\n        <div>\r\n            您的邀请链接为：\r\n            <p style=\"background-color: #0d95e8;font-weight: bolder\">http://chuanyun101.com/?share={{initiator}}</p>\r\n            <p v-if=\"invitee.length\">你目前已邀请{{invitee.length}}人，共获取奖励天数{{15*invitee.length}}天，邀请的人员名单如下：</p>\r\n            <p v-if=\"!invitee.length\">你还没有邀请人哦~，快起邀请把！</p>\r\n        </div>\r\n        <ul v-if=\"invitee.length\">\r\n            <li v-for=\"(item,index) in invitee\" style=\"font-size: large\">{{item.invitee}}</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {get} from \"@/network\";\r\n    import {ref,onMounted} from \"vue\";\r\n    import { encode } from 'js-base64';\r\n\r\n    export default {\r\n        name: \"Invitation\",\r\n        components:{},\r\n        setup(){\r\n            let initiator = encode(JSON.parse(localStorage.getItem('userinfo')).user)\r\n            let invitee = ref([])\r\n            let getData = ()=>{\r\n                get('/vpn/share/').then(\r\n                    res=>{\r\n                        console.log(res.data)\r\n                        invitee.value = res.data\r\n                    }\r\n                )\r\n            }\r\n            onMounted(()=>{\r\n                getData()\r\n            })\r\n            return {initiator,invitee,getData}\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    .invitation {\r\n        height: 100%;\r\n        width: 85%;\r\n        margin: auto;\r\n\r\n        h2 {\r\n            text-align: center;\r\n        }\r\n\r\n        ul {\r\n            font-size: small;\r\n            color: red;\r\n            margin: auto;\r\n            /*text-align: center;*/\r\n        }\r\n\r\n        div {\r\n            margin: 10px auto;\r\n            text-align: center;\r\n        }\r\n    }\r\n</style>","import { render } from \"./Invitation.vue?vue&type=template&id=4e9ec26b&scoped=true\"\nimport script from \"./Invitation.vue?vue&type=script&lang=js\"\nexport * from \"./Invitation.vue?vue&type=script&lang=js\"\n\nimport \"./Invitation.vue?vue&type=style&index=0&id=4e9ec26b&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-4e9ec26b\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Invitation.vue?vue&type=style&index=0&id=4e9ec26b&scoped=true&lang=scss\"","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.6.1';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = [...b64ch];\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_')\n    .replace(/=+$/m, '');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/=+$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n"],"sourceRoot":""}